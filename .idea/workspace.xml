<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e301290b-d8ba-4594-9591-2f625faff11d" name="Changes" comment="backend part">
      <change afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/qima/qima/config/SecurityConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/qima/qima/controller/ProductController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/qima/qima/domain/Category.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/qima/qima/domain/Product.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/qima/qima/repository/CategoryRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/qima/qima/repository/ProductRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/qima/qima/service/ProductService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/db/migration/V1_0__create_schema.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/db/migration/V1_1__add_table_category.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/db/migration/V2_1__add_table_product.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/db/migration/V3_1__insert-data-category.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/db/migration/V4_1__insert-data-product.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/com/qima/qima/Configuration.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/com/qima/qima/ProductControllerTest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/com/qima/qima/ProductServiceTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="generatedSourcesFolder" value="GENERATED_SOURCE_FOLDER" />
        <option name="jdkForImporter" value="17" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="QODANA_PROBLEMS_VIEW_TAB" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2vQH8KoSkPxTdAgoO5p3Y2wr1sq" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.QimaApplication.executor": "Debug",
    "Docker.docker-compose.yaml.postgres: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.postgres: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "JUnit.All in qima.executor": "Debug",
    "JUnit.ProductControllerTest.executor": "Run",
    "JUnit.ProductControllerTest.shouldCreateProduct.executor": "Run",
    "JUnit.ProductControllerTest.shouldDeleteProduct.executor": "Run",
    "JUnit.ProductControllerTest.shouldReturn404WhenUpdatingNonexistentProduct.executor": "Run",
    "JUnit.ProductControllerTest.shouldReturnPagedProducts.executor": "Run",
    "JUnit.ProductControllerTest.shouldUpdateProduct.executor": "Run",
    "JUnit.ProductServiceTest.executor": "Run",
    "Maven.Unknown [clean].executor": "Run",
    "Maven.Unknown [install].executor": "Run",
    "Maven.qima [clean].executor": "Run",
    "Maven.qima [install].executor": "Run",
    "Maven.qima [validate].executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/pedro/Documents/qima/src/main/java/com/qima/qima/controller",
    "project.structure.last.edited": "Global Libraries",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/java/com/qima/qima/controller" />
      <recent name="$PROJECT_DIR$/src/main/java/com/qima/qima/service" />
      <recent name="$PROJECT_DIR$/src/main/java/com/qima/qima" />
      <recent name="$PROJECT_DIR$/src/main/java/com/qima/qima/repository" />
      <recent name="$PROJECT_DIR$/src/main/java/com/qima/qima/domain" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.qima.qima.repository" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="docker-deploy" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Application.QimaApplication">
    <configuration name="QimaApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.qima.qima.QimaApplication" />
      <module name="qima" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.qima.qima.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in qima" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="qima" />
      <option name="PACKAGE_NAME" value="" />
      <option name="TEST_OBJECT" value="package" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductControllerTest.shouldReturn404WhenUpdatingNonexistentProduct" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="qima" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.qima.qima.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.qima.qima" />
      <option name="MAIN_CLASS_NAME" value="com.qima.qima.ProductControllerTest" />
      <option name="METHOD_NAME" value="shouldReturn404WhenUpdatingNonexistentProduct" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductControllerTest.shouldUpdateProduct" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="qima" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.qima.qima.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.qima.qima" />
      <option name="MAIN_CLASS_NAME" value="com.qima.qima.ProductControllerTest" />
      <option name="METHOD_NAME" value="shouldUpdateProduct" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductServiceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="qima" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.qima.qima.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.qima.qima" />
      <option name="MAIN_CLASS_NAME" value="com.qima.qima.ProductServiceTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="containerName" value="" />
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile">
      <deployment type="dockerfile">
        <settings>
          <option name="buildOnly" value="true" />
          <option name="sourceFilePath" value="" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Application.QimaApplication" />
      <item itemvalue="JUnit.All in qima" />
      <item itemvalue="JUnit.ProductControllerTest.shouldReturn404WhenUpdatingNonexistentProduct" />
      <item itemvalue="JUnit.ProductControllerTest.shouldUpdateProduct" />
      <item itemvalue="JUnit.ProductServiceTest" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.QimaApplication" />
        <item itemvalue="JUnit.All in qima" />
        <item itemvalue="JUnit.ProductServiceTest" />
        <item itemvalue="JUnit.ProductControllerTest.shouldUpdateProduct" />
        <item itemvalue="JUnit.ProductControllerTest.shouldReturn404WhenUpdatingNonexistentProduct" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e301290b-d8ba-4594-9591-2f625faff11d" name="Changes" comment="" />
      <created>1744070216908</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1744070216908</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/qima$All_in_qima.ic" NAME="All in qima Coverage Results" MODIFIED="1744125969369" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
  </component>
</project>